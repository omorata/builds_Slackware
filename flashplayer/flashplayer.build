#!/bin/bash

PRGNAM=flashplayer
VERSION=${VERSION:-32.0.0.363}
BUILD=${BUILD:-2omx}
ARCH=${ARCH:-x86_64}


CWD=$(pwd)
TMP=${TMP:-/tmp/packages}
BUILDIR=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-$TMP}

MARCH=${ARCH:-$( uname -m )}
case "$MARCH" in
    x86_64)
	LIBDIRSUFFIX="64"
	export ARCH=x86_64
	;;
    i?86)
	echo "bbb"
	sleep 2
	LIBDIRSUFFIX=""
	export ARCH=i486
	;;
    *)
	echo "Unsupported architecture '$ARCH'"
	;;
esac


if [ "$ARCH" != "i686" ] && [ "$ARCH" != "x86_64" ]; then
  printf "\n\n$ARCH is not supported... \n"
  exit 1
fi


set -e -x


if [ "$1" == "pkg" ];then 
    if [ `id -u` -eq 0 ];then 
        cd $BUILDIR
        chown -R root.root .

        makepkg -l y -c n ../$PRGNAM-$VERSION-$ARCH-$BUILD.tgz

        cd $OUTPUT
	
        chown oscar.users $PRGNAM-$VERSION-$ARCH-$BUILD.tgz

        mv $PRGNAM-$VERSION-$ARCH-$BUILD.tgz $CWD
	
        chown -R oscar.users .
    else
        echo "Has de ser root per poder instal·lar el paquet"
    fi
else


    
    SRC=$SRCNAM-$VERSION
    DOC=$BUILDIR/usr/doc/$PRGNAM-$VERSION

    if [ -e $BUILDIR ];then
        rm -Rf $BUILDIR
    fi
    mkdir $BUILDIR

    cd $BUILDIR
    tar zxvf $CWD/flash_player_npapi_linux.x86_64.tar.gz


    find -L . \
	 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
	 -o -perm 511 \) -exec chmod 755 {} \; -o \
	 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
	 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;


    # Remove 32-bit bogus compatibility in 64-bit package:
    [ "$ARCH" = "x86_64" ] && rm -rf usr/lib
    
    mkdir -p usr/lib${LIBDIRSUFFIX}/mozilla/plugins
    mv libflashplayer.so usr/lib${LIBDIRSUFFIX}/mozilla/plugins/
    find usr/lib${LIBDIRSUFFIX} -name "*.so" -exec chmod 755 {} \;


    mkdir -p $DOC
    mv LGPL *.txt *.pdf $DOC || true

    mkdir -p $BUILDIR/install 

    cat $CWD/slack-desc > $BUILDIR/install/slack-desc
    cat $CWD/doinst.sh > $BUILDIR/install/doinst.sh
    
    
    find $BUILDIR -print0 | xargs -0 file | grep -e "executable" -e \
	"shared object" | grep ELF   | cut -f 1 -d : | \
	xargs strip --strip-unneeded 2> /dev/null || true
   
fi
echo "Ok"
